<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gem.meihu.dao.mapper.ShopOrderMapper">
  <resultMap id="BaseResultMap" type="com.gem.meihu.entity.ShopOrder">
    <id column="orderid" jdbcType="INTEGER" property="orderid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="ordertime" jdbcType="DATE" property="ordertime" />
    <result column="offid" jdbcType="INTEGER" property="offid" />
    <result column="orderstatus" jdbcType="VARCHAR" property="orderstatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orderid, uid, ordertime, offid, orderstatus
  </sql>
  <select id="selectByExample" parameterType="com.gem.meihu.entity.ShopOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop_order
    where orderid = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shop_order
    where orderid = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gem.meihu.entity.ShopOrderExample">
    delete from shop_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gem.meihu.entity.ShopOrder">
    insert into shop_order (orderid, uid, ordertime, 
      offid, orderstatus)
    values (#{orderid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{ordertime,jdbcType=DATE}, 
      #{offid,jdbcType=INTEGER}, #{orderstatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gem.meihu.entity.ShopOrder">
    insert into shop_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        orderid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="ordertime != null">
        ordertime,
      </if>
      <if test="offid != null">
        offid,
      </if>
      <if test="orderstatus != null">
        orderstatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=DATE},
      </if>
      <if test="offid != null">
        #{offid,jdbcType=INTEGER},
      </if>
      <if test="orderstatus != null">
        #{orderstatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gem.meihu.entity.ShopOrderExample" resultType="java.lang.Long">
    select count(*) from shop_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shop_order
    <set>
      <if test="record.orderid != null">
        orderid = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.ordertime != null">
        ordertime = #{record.ordertime,jdbcType=DATE},
      </if>
      <if test="record.offid != null">
        offid = #{record.offid,jdbcType=INTEGER},
      </if>
      <if test="record.orderstatus != null">
        orderstatus = #{record.orderstatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shop_order
    set orderid = #{record.orderid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      ordertime = #{record.ordertime,jdbcType=DATE},
      offid = #{record.offid,jdbcType=INTEGER},
      orderstatus = #{record.orderstatus,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gem.meihu.entity.ShopOrder">
    update shop_order
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null">
        ordertime = #{ordertime,jdbcType=DATE},
      </if>
      <if test="offid != null">
        offid = #{offid,jdbcType=INTEGER},
      </if>
      <if test="orderstatus != null">
        orderstatus = #{orderstatus,jdbcType=VARCHAR},
      </if>
    </set>
    where orderid = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gem.meihu.entity.ShopOrder">
    update shop_order
    set uid = #{uid,jdbcType=INTEGER},
      ordertime = #{ordertime,jdbcType=DATE},
      offid = #{offid,jdbcType=INTEGER},
      orderstatus = #{orderstatus,jdbcType=VARCHAR}
    where orderid = #{orderid,jdbcType=INTEGER}
  </update>
</mapper>