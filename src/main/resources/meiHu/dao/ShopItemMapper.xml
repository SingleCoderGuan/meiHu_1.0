<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="meiHu.dao.ShopItemMapper">
  <resultMap id="BaseResultMap" type="com.gem.meihu.entity.ShopItem">
    <id column="itemid" jdbcType="INTEGER" property="itemid" />
    <result column="orderid" jdbcType="INTEGER" property="orderid" />
    <result column="goodid" jdbcType="INTEGER" property="goodid" />
    <result column="itemcount" jdbcType="INTEGER" property="itemcount" />
    <result column="goodprice" jdbcType="DOUBLE" property="goodprice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    itemid, orderid, goodid, itemcount, goodprice
  </sql>
  <select id="selectByExample" parameterType="com.gem.meihu.entity.ShopItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop_item
    where itemid = #{itemid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shop_item
    where itemid = #{itemid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gem.meihu.entity.ShopItemExample">
    delete from shop_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gem.meihu.entity.ShopItem">
    insert into shop_item (itemid, orderid, goodid, 
      itemcount, goodprice)
    values (#{itemid,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, #{goodid,jdbcType=INTEGER}, 
      #{itemcount,jdbcType=INTEGER}, #{goodprice,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.gem.meihu.entity.ShopItem">
    insert into shop_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemid != null">
        itemid,
      </if>
      <if test="orderid != null">
        orderid,
      </if>
      <if test="goodid != null">
        goodid,
      </if>
      <if test="itemcount != null">
        itemcount,
      </if>
      <if test="goodprice != null">
        goodprice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemid != null">
        #{itemid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="goodid != null">
        #{goodid,jdbcType=INTEGER},
      </if>
      <if test="itemcount != null">
        #{itemcount,jdbcType=INTEGER},
      </if>
      <if test="goodprice != null">
        #{goodprice,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gem.meihu.entity.ShopItemExample" resultType="java.lang.Long">
    select count(*) from shop_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shop_item
    <set>
      <if test="record.itemid != null">
        itemid = #{record.itemid,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null">
        orderid = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.goodid != null">
        goodid = #{record.goodid,jdbcType=INTEGER},
      </if>
      <if test="record.itemcount != null">
        itemcount = #{record.itemcount,jdbcType=INTEGER},
      </if>
      <if test="record.goodprice != null">
        goodprice = #{record.goodprice,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shop_item
    set itemid = #{record.itemid,jdbcType=INTEGER},
      orderid = #{record.orderid,jdbcType=INTEGER},
      goodid = #{record.goodid,jdbcType=INTEGER},
      itemcount = #{record.itemcount,jdbcType=INTEGER},
      goodprice = #{record.goodprice,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gem.meihu.entity.ShopItem">
    update shop_item
    <set>
      <if test="orderid != null">
        orderid = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="goodid != null">
        goodid = #{goodid,jdbcType=INTEGER},
      </if>
      <if test="itemcount != null">
        itemcount = #{itemcount,jdbcType=INTEGER},
      </if>
      <if test="goodprice != null">
        goodprice = #{goodprice,jdbcType=DOUBLE},
      </if>
    </set>
    where itemid = #{itemid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gem.meihu.entity.ShopItem">
    update shop_item
    set orderid = #{orderid,jdbcType=INTEGER},
      goodid = #{goodid,jdbcType=INTEGER},
      itemcount = #{itemcount,jdbcType=INTEGER},
      goodprice = #{goodprice,jdbcType=DOUBLE}
    where itemid = #{itemid,jdbcType=INTEGER}
  </update>
</mapper>