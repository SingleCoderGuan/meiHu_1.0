<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gem.meihu.dao.mapper.ShopGoodsMapper">
  <resultMap id="BaseResultMap" type="com.gem.meihu.entity.ShopGoods">
    <id column="goodid" jdbcType="INTEGER" property="goodid" />
    <result column="goodname" jdbcType="VARCHAR" property="goodname" />
    <result column="goodpic" jdbcType="VARCHAR" property="goodpic" />
    <result column="goodprice" jdbcType="DOUBLE" property="goodprice" />
    <result column="goodstore" jdbcType="INTEGER" property="goodstore" />
    <result column="goodaddress" jdbcType="VARCHAR" property="goodaddress" />
    <result column="gooddetail" jdbcType="VARCHAR" property="gooddetail" />
    <result column="goodsales" jdbcType="INTEGER" property="goodsales" />
    <result column="categoryid" jdbcType="INTEGER" property="categoryid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goodid, goodname, goodpic, goodprice, goodstore, goodaddress, gooddetail, goodsales, 
    categoryid
  </sql>
  <select id="selectByExample" parameterType="com.gem.meihu.entity.ShopGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop_goods
    where goodid = #{goodid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shop_goods
    where goodid = #{goodid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gem.meihu.entity.ShopGoodsExample">
    delete from shop_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gem.meihu.entity.ShopGoods">
    insert into shop_goods (goodid, goodname, goodpic, 
      goodprice, goodstore, goodaddress, 
      gooddetail, goodsales, categoryid
      )
    values (#{goodid,jdbcType=INTEGER}, #{goodname,jdbcType=VARCHAR}, #{goodpic,jdbcType=VARCHAR}, 
      #{goodprice,jdbcType=DOUBLE}, #{goodstore,jdbcType=INTEGER}, #{goodaddress,jdbcType=VARCHAR}, 
      #{gooddetail,jdbcType=VARCHAR}, #{goodsales,jdbcType=INTEGER}, #{categoryid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gem.meihu.entity.ShopGoods">
    insert into shop_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodid != null">
        goodid,
      </if>
      <if test="goodname != null">
        goodname,
      </if>
      <if test="goodpic != null">
        goodpic,
      </if>
      <if test="goodprice != null">
        goodprice,
      </if>
      <if test="goodstore != null">
        goodstore,
      </if>
      <if test="goodaddress != null">
        goodaddress,
      </if>
      <if test="gooddetail != null">
        gooddetail,
      </if>
      <if test="goodsales != null">
        goodsales,
      </if>
      <if test="categoryid != null">
        categoryid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodid != null">
        #{goodid,jdbcType=INTEGER},
      </if>
      <if test="goodname != null">
        #{goodname,jdbcType=VARCHAR},
      </if>
      <if test="goodpic != null">
        #{goodpic,jdbcType=VARCHAR},
      </if>
      <if test="goodprice != null">
        #{goodprice,jdbcType=DOUBLE},
      </if>
      <if test="goodstore != null">
        #{goodstore,jdbcType=INTEGER},
      </if>
      <if test="goodaddress != null">
        #{goodaddress,jdbcType=VARCHAR},
      </if>
      <if test="gooddetail != null">
        #{gooddetail,jdbcType=VARCHAR},
      </if>
      <if test="goodsales != null">
        #{goodsales,jdbcType=INTEGER},
      </if>
      <if test="categoryid != null">
        #{categoryid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gem.meihu.entity.ShopGoodsExample" resultType="java.lang.Long">
    select count(*) from shop_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shop_goods
    <set>
      <if test="record.goodid != null">
        goodid = #{record.goodid,jdbcType=INTEGER},
      </if>
      <if test="record.goodname != null">
        goodname = #{record.goodname,jdbcType=VARCHAR},
      </if>
      <if test="record.goodpic != null">
        goodpic = #{record.goodpic,jdbcType=VARCHAR},
      </if>
      <if test="record.goodprice != null">
        goodprice = #{record.goodprice,jdbcType=DOUBLE},
      </if>
      <if test="record.goodstore != null">
        goodstore = #{record.goodstore,jdbcType=INTEGER},
      </if>
      <if test="record.goodaddress != null">
        goodaddress = #{record.goodaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.gooddetail != null">
        gooddetail = #{record.gooddetail,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsales != null">
        goodsales = #{record.goodsales,jdbcType=INTEGER},
      </if>
      <if test="record.categoryid != null">
        categoryid = #{record.categoryid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shop_goods
    set goodid = #{record.goodid,jdbcType=INTEGER},
      goodname = #{record.goodname,jdbcType=VARCHAR},
      goodpic = #{record.goodpic,jdbcType=VARCHAR},
      goodprice = #{record.goodprice,jdbcType=DOUBLE},
      goodstore = #{record.goodstore,jdbcType=INTEGER},
      goodaddress = #{record.goodaddress,jdbcType=VARCHAR},
      gooddetail = #{record.gooddetail,jdbcType=VARCHAR},
      goodsales = #{record.goodsales,jdbcType=INTEGER},
      categoryid = #{record.categoryid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gem.meihu.entity.ShopGoods">
    update shop_goods
    <set>
      <if test="goodname != null">
        goodname = #{goodname,jdbcType=VARCHAR},
      </if>
      <if test="goodpic != null">
        goodpic = #{goodpic,jdbcType=VARCHAR},
      </if>
      <if test="goodprice != null">
        goodprice = #{goodprice,jdbcType=DOUBLE},
      </if>
      <if test="goodstore != null">
        goodstore = #{goodstore,jdbcType=INTEGER},
      </if>
      <if test="goodaddress != null">
        goodaddress = #{goodaddress,jdbcType=VARCHAR},
      </if>
      <if test="gooddetail != null">
        gooddetail = #{gooddetail,jdbcType=VARCHAR},
      </if>
      <if test="goodsales != null">
        goodsales = #{goodsales,jdbcType=INTEGER},
      </if>
      <if test="categoryid != null">
        categoryid = #{categoryid,jdbcType=INTEGER},
      </if>
    </set>
    where goodid = #{goodid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gem.meihu.entity.ShopGoods">
    update shop_goods
    set goodname = #{goodname,jdbcType=VARCHAR},
      goodpic = #{goodpic,jdbcType=VARCHAR},
      goodprice = #{goodprice,jdbcType=DOUBLE},
      goodstore = #{goodstore,jdbcType=INTEGER},
      goodaddress = #{goodaddress,jdbcType=VARCHAR},
      gooddetail = #{gooddetail,jdbcType=VARCHAR},
      goodsales = #{goodsales,jdbcType=INTEGER},
      categoryid = #{categoryid,jdbcType=INTEGER}
    where goodid = #{goodid,jdbcType=INTEGER}
  </update>
</mapper>